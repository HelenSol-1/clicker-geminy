import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiogram.utils import executor
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")
WEBAPP_URL = os.getenv("WEBAPP_URL")
ROCKET_URL = os.getenv("ROCKET_URL")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if not TOKEN:
    logging.error("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)
if not WEBAPP_URL:
    logging.warning("‚ö†Ô∏è WEBAPP_URL –Ω–µ –∑–∞–¥–∞–Ω.")
if not ROCKET_URL:
    logging.warning("‚ö†Ô∏è ROCKET_URL –Ω–µ –∑–∞–¥–∞–Ω.")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    webapp_button = types.KeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Clicker", web_app=WebAppInfo(url=WEBAPP_URL))
    rocket_button = types.KeyboardButton("üöÄ –ò–≥—Ä–∞—Ç—å –≤ –†–∞–∫–µ—Ç—É", web_app=WebAppInfo(url=ROCKET_URL))
    keyboard.add(webapp_button, rocket_button)

    await message.answer("–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É:", reply_markup=keyboard)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
