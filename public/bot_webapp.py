import os
import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.client.default import DefaultBotProperties
from aiogram.types import WebAppInfo
from dotenv import load_dotenv

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")
GAME_URL = os.getenv("GAME_URL")  # –û—Å–Ω–æ–≤–Ω–∞—è –∏–≥—Ä–∞
ROCKET_URL = os.getenv("ROCKET_GAME_URL")  # –ò–≥—Ä–∞ —Å —Ä–∞–∫–µ—Ç–æ–π

if not BOT_TOKEN:
    logger.error("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    exit(1)
if not GAME_URL:
    logger.warning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è GAME_URL –Ω–µ –∑–∞–¥–∞–Ω–∞.")
if not ROCKET_URL:
    logger.warning("‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è ROCKET_GAME_URL –Ω–µ –∑–∞–¥–∞–Ω–∞.")

logger.info(f"‚úÖ TELEGRAM_TOKEN –∑–∞–≥—Ä—É–∂–µ–Ω: {BOT_TOKEN[:10]}********")
logger.info(f"‚úÖ GAME_URL –∑–∞–≥—Ä—É–∂–µ–Ω: {GAME_URL}")
logger.info(f"‚úÖ ROCKET_licker-geminy –∑–∞–≥—Ä—É–∂–µ–Ω: {ROCKET_URL}")

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode="HTML"))
dp = Dispatcher()

@dp.message(commands=['start'])
async def start_command(message: types.Message):
    logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç {message.from_user.id}")

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    webapp_button = types.KeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å –≤ Clicker", web_app=WebAppInfo(url=GAME_URL))
    rocket_button = types.KeyboardButton("üöÄ –ò–≥—Ä–∞—Ç—å –≤ —Ä–∞–∫–µ—Ç—É", web_app=WebAppInfo(url=ROCKET_URL))
    keyboard.add(webapp_button, rocket_button)

    await message.answer("–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –∏–≥—Ä—É:", reply_markup=keyboard)

async def main():
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã...")
    await dp.start_polling(bot, skip_updates=True)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
