import 'dotenv/config';
import axios from 'axios';

async function testGeminiAPI() {
    try {
        const apiKey = process.env.GEMINI_API_KEY;
        if (!apiKey) {
            console.error("‚ùå API-–∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å .env!");
            return;
        }

        const url = `https://generativelanguage.googleapis.com/v1/models/gemini-pro:generateContent?key=${apiKey}`;

        const requestData = {
            contents: [
                {
                    parts: [
                        { text: "–û–±—ä—è—Å–Ω–∏, –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç." }
                    ]
                }
            ]
        };

        console.log("üîç –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...");
        const response = await axios.post(url, requestData, {
            headers: { "Content-Type": "application/json" }
        });

        console.log("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç Gemini API:", JSON.stringify(response.data, null, 2));
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ Gemini API:", error.response ? error.response.data : error.message);
    }
}

testGeminiAPI();
